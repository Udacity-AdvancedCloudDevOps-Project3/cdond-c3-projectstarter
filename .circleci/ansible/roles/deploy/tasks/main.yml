
### We search for the bock in Ansible documentation
### like "copy builtin" of "file builtin" and so on


---
# - name: "update apt packages."
#   become: true
#   apt:
#     update_cache: yes

# - name: "upgrade packages"
#   become: true
#   apt:
#     upgrade: yes

# - name: Remove dependencies that are no longer required
#   become: true
#   ansible.builtin.apt:
#     autoremove: yes

# - name: Install python3
#   become: true
#   apt:
#     name:
#       - python3
#     state: latest

# - name: Install nodejs
#   become: true
#   apt:
#     name:
#       - nodejs
#     state: present

# - name: Install npm
#   become: true
#   apt:
#     name:
#       - npm
#     state: present

# - name: Install PM2
#   npm:
#     name: pm2
#     global: yes
#     state: present

# - name: Create a directory if it does not exist
#   ansible.builtin.file:
#     path: $HOME/web
#     state: directory
#     mode: '0755'

# - name: Copy index.js page
#   # become: true
#   copy:
#     src: index.js
#     dest: $HOME/web/index.js
#     # backup: yes

# - name: start pm2 process
#   command: 'pm2 start /root/web/index.js -f'
#   become: true

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: /home/ubuntu/web
    state: directory
    mode: '0755'

- name: Copy artifact to the instance
  copy:
    src: artifact.tar.gz
    dest: /home/ubuntu/web/
    # backup: yes

# - name: This command will change the working directory to /home/ubuntu/web/
#   ansible.builtin.shell:
#     # cmd: ls -l | grep log
#     chdir: /home/ubuntu/web/

- name: Extract artifact.tar.gz into /home/ubuntu/web/
  ansible.builtin.unarchive:
    src: artifact.tar.gz
    dest: /home/ubuntu/web/

# - name: start pm2 process
#   # command: pm2 start /home/ubuntu/web/index.js -f
#   # become: true
#   ansible.builtin.shell:
# #     # cmd: ls -l | grep log
#     chdir: /home/ubuntu/web/
#     cmd: pm2 stop default && pm2 start npm -- start
#     environment:
#     - NODE_ENV: production
#     - ENVIRONMENT: production
#     - TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION')}}"
#     - TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES')}}"
#     - TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST')}}"
#     - TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT')}}"
#     - TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
#     - TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"
#     - TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE')}}"
#     - TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS')}}"
#     - TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR')}}"

- name: start pm2 process
  become: true
  command: |
    # pm2 stop default
    pm2 stop all
    pm2 start npm -- start
  args:
    chdir: /home/ubuntu/web/
  # environment:
  #   - NODE_ENV: production
  #   - ENVIRONMENT: production
  #   - TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION')}}"
  #   - TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES')}}"
  #   - TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST')}}"
  #   - TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT')}}"
  #   - TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
  #   - TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"
  #   - TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE')}}"
  #   - TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS')}}"
  #   - TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR')}}"